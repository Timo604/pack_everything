# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "autounattend" {
  type    = string
  default = "./answer_files/7/Autounattend.xml"
}

variable "cpus" {
  type    = string
  default = "2"
}

variable "disk_size" {
  type    = string
  default = "61440"
}

variable "headless" {
  type    = string
  default = "true"
}

variable "iso_checksum" {
  type    = string
  default = "1d0d239a252cb53e466d39e752b17c28"
}

variable "iso_url" {
  type    = string
  default = "http://care.dlservice.microsoft.com/dl/download/evalx/win7/x64/EN/7600.16385.090713-1255_x64fre_enterprise_en-us_EVAL_Eval_Enterprise-GRMCENXEVAL_EN_DVD.iso"
}

variable "memory_size" {
  type    = string
  default = "2048"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "parallels-iso" "autogenerated_1" {
  boot_wait              = "2m"
  disk_size              = "${var.disk_size}"
  floppy_files           = ["${var.autounattend}", "./scripts/dis-updates.ps1", "./scripts/microsoft-updates.bat", "./scripts/win-updates.ps1", "./scripts/openssh.ps1"]
  guest_os_type          = "win-7"
  iso_checksum           = "${var.iso_checksum}"
  iso_url                = "${var.iso_url}"
  parallels_tools_flavor = "win"
  prlctl                 = [["set", "{{ .Name }}", "--memsize", "${var.memory_size}"], ["set", "{{ .Name }}", "--cpus", "${var.cpus}"], ["set", "{{ .Name }}", "--winsystray-in-macmenu", "off"], ["set", "{{ .Name }}", "--startup-view", "window"], ["set", "{{ .Name }}", "--efi-boot", "off"]]
  shutdown_command       = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
  ssh_password           = "vagrant"
  ssh_username           = "vagrant"
  ssh_wait_timeout       = "8h"
}

source "virtualbox-iso" "autogenerated_2" {
  boot_wait         = "2m"
  disk_size         = "${var.disk_size}"
  floppy_files      = ["${var.autounattend}", "./scripts/dis-updates.ps1", "./scripts/hotfix-KB3102810.bat", "./scripts/microsoft-updates.bat", "./scripts/win-updates.ps1", "./scripts/openssh.ps1"]
  guest_os_type     = "Windows7_64"
  headless          = "${var.headless}"
  iso_checksum      = "${var.iso_checksum}"
  iso_url           = "${var.iso_url}"
  shutdown_command  = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
  ssh_password      = "vagrant"
  ssh_username      = "vagrant"
  ssh_wait_timeout  = "8h"
  vboxmanage        = [["modifyvm", "{{ .Name }}", "--memory", "${var.memory_size}"], ["modifyvm", "{{ .Name }}", "--cpus", "${var.cpus}"]]
}

source "vmware-iso" "autogenerated_3" {
  boot_wait           = "2m"
  disk_size           = "${var.disk_size}"
  floppy_files        = ["${var.autounattend}", "./scripts/dis-updates.ps1", "./scripts/hotfix-KB3102810.bat", "./scripts/microsoft-updates.bat", "./scripts/win-updates.ps1", "./scripts/openssh.ps1"]
  guest_os_type       = "windows7-64"
  headless            = "${var.headless}"
  iso_checksum        = "${var.iso_checksum}"
  iso_url             = "${var.iso_url}"
  shutdown_command    = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
  ssh_password        = "vagrant"
  ssh_username        = "vagrant"
  ssh_wait_timeout    = "8h"
  tools_upload_flavor = "windows"
  vmx_data = {
    "RemoteDisplay.vnc.enabled" = "false"
    "RemoteDisplay.vnc.port"    = "5900"
    memsize                     = "${var.memory_size}"
    numvcpus                    = "${var.cpus}"
    "scsi0.virtualDev"          = "lsisas1068"
  }
  vnc_port_max = 5980
  vnc_port_min = 5900
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.parallels-iso.autogenerated_1", "source.virtualbox-iso.autogenerated_2", "source.vmware-iso.autogenerated_3"]

  provisioner "shell" {
    execute_command = "{{ .Vars }} cmd /c C:/Windows/Temp/script.bat"
    remote_path     = "/tmp/script.bat"
    scripts         = ["./scripts/vm-guest-tools.bat", "./scripts/vagrant-ssh.bat", "./scripts/disable-auto-logon.bat", "./scripts/enable-rdp.bat", "./scripts/compile-dotnet-assemblies.bat", "./scripts/compact.bat"]
  }

  post-processor "vagrant" {
    keep_input_artifact  = false
    output               = "windows_7_<no value>.box"
    vagrantfile_template = "vagrantfile-windows_7.template"
  }
}
